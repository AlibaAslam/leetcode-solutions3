#include <vector>
#include <algorithm>

class Solution {
public:
    int partitionDisjoint(std::vector<int>& nums) {
        int n = nums.size();

        std::vector<int> RMin(n);
        RMin[n - 1] = nums[n - 1];
        
        for (int i = n - 2; i >= 0; --i) {
            RMin[i] = std::min(nums[i], RMin[i + 1]);
        }

        int current_max = nums[0];
        
        for (int i = 0; i < n - 1; ++i) {
            current_max = std::max(current_max, nums[i]);
            
            if (current_max <= RMin[i + 1]) {
                return i + 1;
            }
        }
        
        return n;
    }
};
